name: cleanup registry

on:
  schedule:
    - cron: "0 0 * * 0" # Run weekly at midnight on Sunday
  workflow_dispatch: # Allow manual triggers

jobs:
  cleanup-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Clean up API images
        id: cleanup-api
        run: |
          DELETED_TAGS=""
          TAGS_TO_DELETE=$(doctl registry repository list-tags ${{ vars.API_IMAGE }} --format Tag --no-header | grep -v -E '^(latest|buildcache)$' | sort -r | tail -n +4)

          if [ ! -z "$TAGS_TO_DELETE" ]; then
            echo "Deleting old API tags: $TAGS_TO_DELETE"
            for TAG in $TAGS_TO_DELETE; do
              doctl registry repository delete-tag ${{ vars.API_IMAGE }} $TAG --force
              DELETED_TAGS="$DELETED_TAGS $TAG"
            done
            echo "deleted_tags=$DELETED_TAGS" >> $GITHUB_OUTPUT
          else
            echo "No API tags to delete"
          fi

      - name: Log deleted API tags
        if: steps.cleanup-api.outputs.deleted_tags
        run: echo "Deleted API tags:${{ steps.cleanup-api.outputs.deleted_tags }}"

  cleanup-queue:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Clean up Queue images
        id: cleanup-queue
        run: |
          DELETED_TAGS=""
          TAGS_TO_DELETE=$(doctl registry repository list-tags ${{ vars.QUEUE_IMAGE }} --format Tag --no-header | grep -v -E '^(latest|buildcache)$' | sort -r | tail -n +4)

          if [ ! -z "$TAGS_TO_DELETE" ]; then
            echo "Deleting old Queue tags: $TAGS_TO_DELETE"
            for TAG in $TAGS_TO_DELETE; do
              doctl registry repository delete-tag ${{ vars.QUEUE_IMAGE }} $TAG --force
              DELETED_TAGS="$DELETED_TAGS $TAG"
            done
            echo "deleted_tags=$DELETED_TAGS" >> $GITHUB_OUTPUT
          else
            echo "No Queue tags to delete"
          fi

      - name: Log deleted Queue tags
        if: steps.cleanup-queue.outputs.deleted_tags
        run: echo "Deleted Queue tags:${{ steps.cleanup-queue.outputs.deleted_tags }}"

  cleanup-ui:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Clean up UI images
        id: cleanup-ui
        run: |
          DELETED_TAGS=""
          TAGS_TO_DELETE=$(doctl registry repository list-tags ${{ vars.UI_IMAGE }} --format Tag --no-header | grep -v -E '^(latest|buildcache)$' | sort -r | tail -n +4)

          if [ ! -z "$TAGS_TO_DELETE" ]; then
            echo "Deleting old UI tags: $TAGS_TO_DELETE"
            for TAG in $TAGS_TO_DELETE; do
              doctl registry repository delete-tag ${{ vars.UI_IMAGE }} $TAG --force
              DELETED_TAGS="$DELETED_TAGS $TAG"
            done
            echo "deleted_tags=$DELETED_TAGS" >> $GITHUB_OUTPUT
          else
            echo "No UI tags to delete"
          fi

      - name: Log deleted UI tags
        if: steps.cleanup-ui.outputs.deleted_tags
        run: echo "Deleted UI tags:${{ steps.cleanup-ui.outputs.deleted_tags }}"
