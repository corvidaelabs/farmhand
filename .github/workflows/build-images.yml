name: build & push images

on:
  release:
    types:
      - prereleased
      - released
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit hash
        id: version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push API image
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: config/api.Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DO_REGISTRY }}/${{ vars.API_IMAGE }}:latest
            ${{ secrets.DO_REGISTRY }}/${{ vars.API_IMAGE }}:${{ steps.version.outputs.VERSION }}

      # Build and push Queue image
      - name: Build and push Queue image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: config/queue.Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DO_REGISTRY }}/${{ vars.QUEUE_IMAGE }}:latest
            ${{ secrets.DO_REGISTRY }}/${{ vars.QUEUE_IMAGE }}:${{ steps.version.outputs.VERSION }}

      # Build and push UI image
      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: config/ui.Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DO_REGISTRY }}/${{ vars.UI_IMAGE }}:latest
            ${{ secrets.DO_REGISTRY }}/${{ vars.UI_IMAGE }}:${{ steps.version.outputs.VERSION }}

      - name: Image digest
        run: |
          echo "API image digest: $(doctl registry repository digest-list ${{ vars.API_IMAGE }} --format Tag,Digest --no-header | grep latest)"
          echo "Queue image digest: $(doctl registry repository digest-list ${{ vars.QUEUE_IMAGE }} --format Tag,Digest --no-header | grep latest)"
          echo "UI image digest: $(doctl registry repository digest-list ${{ vars.UI_IMAGE }} --format Tag,Digest --no-header | grep latest)"
